services:
  postgres:
    image: postgres:17.4
    environment:
      POSTGRES_DB: ${API_DB_DATABASE}
      POSTGRES_USER: ${API_DB_USER}
      POSTGRES_PASSWORD: ${API_DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: password
    ports:
      - "5432:5432"

  backend:
    image: maven:3.9.9-eclipse-temurin-21-alpine
    depends_on: [ postgres ]
    environment:
      API_DB_HOST: ${API_DB_HOST}
      API_DB_PORT: ${API_DB_PORT}
      API_DB_DATABASE: ${API_DB_DATABASE}
      API_DB_USER: ${API_DB_USER}
      API_DB_PASSWORD: ${API_DB_PASSWORD}
      API_AWS_S3_ACCESS_KEY: ${API_AWS_S3_ACCESS_KEY}
      API_AWS_S3_SECRET_KEY: ${API_AWS_S3_SECRET_KEY}
      API_AWS_S3_REGION: ${API_AWS_S3_REGION}
      API_AWS_S3_BUCKET_NAME: ${API_AWS_S3_BUCKET_NAME}
      AWS_JAVA_V1_DISABLE_DEPRECATION_ANNOUNCEMENT: true
    working_dir: /app
    volumes:
      - ./main:/app:ro
      - /app/target
    ports:
      - "8080:8080"
    command: /bin/bash -c "./mvnw spring-boot:run -DoutputDirectory=/tmp/target -Dspring-boot.run.profiles=dev"

  frontend:
    image: node:23-alpine
    working_dir: /app/web
    volumes:
      - ./:/app
      - /app/web/node_modules
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev"
